---
- name: Create a Sandbox Instance.
  hosts: local
  connection: local
  gather_facts: False
  vars:
    ansible_host_group: webservers
    count: 1
    image: ami-052efd3df9dad4825
    instance_type: t2.micro
    keypair: myseckey 
    region: us-east-1
    security_group: webservers_sg
  vars_files:
    - aws_keys.yml

  tasks:
    - name: Create a security group
      ec2_group:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        description: The webservers security group
        name: "{{ security_group }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 50000
            to_port: 50000
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
        state: present

    - name: Launch the new EC2 Instance
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        count: "{{count}}"
        group: "{{ security_group }}"
        image: "{{ image }}"
        instance_type: "{{ instance_type }}"
        key_name: "{{ keypair }}"
        monitoring: yes
        region: "{{ region }}"
        state: present
        termination_protection: no
        wait: true
        wait_timeout: 320
      register: ec2

    - name: Add the newly created host so that we can further contact it
      add_host:
        groups: "{{ ansible_host_group }}"
        name: "{{ item.public_ip }}"
      with_items: "{{ ec2.instances }}"

    - name: Add tag to Instance(s)
      ec2_tag:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}" 
        resource: "{{ item.id }}" 
        state: "present"
        tags:
          Type: webserver
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      wait_for:
        connect_timeout: 5
        delay: 60
        host: "{{ item.public_ip }}"
        port: 22
        state: started 
        timeout: 320
      with_items: "{{ ec2.instances }}"

